// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Models for urn:iso:std:iso:20022:tech:xsd:admi.011.001.01
package admi_011_001_01

import (
	"encoding/xml"

	"github.com/moov-io/fedwire20022/pkg/fedwire"
)

// XSD Elements

type Document struct {
	XMLName xml.Name

	SysEvtAck SystemEventAcknowledgementV01 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 SysEvtAck"`
}

// XSD ComplexType declarations

type Event1 struct {
	EvtCd    Max4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 EvtCd"`
	EvtParam []*Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 EvtParam,omitempty"`
	EvtDesc  *Max350Text          `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 EvtDesc,omitempty"`
	EvtTm    *fedwire.ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 EvtTm,omitempty"`
}

type SupplementaryData1 struct {
	PlcAndNm *Max350Text                `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 PlcAndNm,omitempty"`
	Envlp    SupplementaryDataEnvelope1 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 Envlp"`
}

type SupplementaryDataEnvelope1 struct {
	Item string `xml:",any"`
}

type SystemEventAcknowledgementV01 struct {
	MsgId       Max35Text               `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 MsgId"`
	OrgtrRef    *Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 OrgtrRef,omitempty"`
	SttlmSsnIdr *Exact4AlphaNumericText `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 SttlmSsnIdr,omitempty"`
	AckDtls     *Event1                 `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 AckDtls,omitempty"`
	SplmtryData []*SupplementaryData1   `xml:"urn:iso:std:iso:20022:tech:xsd:admi.011.001.01 SplmtryData,omitempty"`
}

// XSD SimpleType declarations

type Exact4AlphaNumericText string

type Max350Text string

type Max35Text string

type Max4AlphaNumericText string
